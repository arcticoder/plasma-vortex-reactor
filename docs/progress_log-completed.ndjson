{"event":"tailor_bennett_focus","date":"2025-08-22","topic":"Bennett-profile Z-pinch focus","audience":"arXiv:2506.05727","status":"completed","date_completed":"2025-08-23","notes":"Emphasize confinement ≥94% and Γ>140 for ≥10 ms; include sweep and duration checks.","math_snippet":"\\Gamma(t) = \\frac{|\\nabla p \\times \\nabla \\rho|}{\\max(\\rho^2, \\epsilon)};\\quad \\text{pass if } \\Gamma \\ge 140 \\text{ for } \\Delta t=10 \\text{ms}","python_snippet":"from reactor.metrics import stability_duration\nimport numpy as np\ngamma = np.ones(10000)*150.0 + np.random.normal(0,0.01,10000)\nassert stability_duration(gamma, dt=1e-6, threshold=140.0, min_duration=1e-2)","refs":["scripts/param_sweep_confinement.py","scripts/plot_stability.py","tests/test_followups.py"]}
{"event":"tailor_trap_papers","date":"2025-08-22","topic":"Transport/magnetization trap papers","audience":"arXiv:1703.10727","status":"completed","date_completed":"2025-08-23","notes":"Report Γ and particle-retention (%) over 10 ms window; map to stability_probability.","python_snippet":"from reactor.analysis_stat import stability_probability\nprob = stability_probability(np.ones(10000)*150.0, threshold=140.0, steps=10000)\nprint(prob)","refs":["scripts/time_to_stability_yield.py","scripts/plot_stability.py","tests/test_followups.py"]}
{"event":"tailor_pair_beam","date":"2025-08-22","topic":"Pair/positron beam/shower papers","audience":"arXiv:2207.09093","status":"completed","date_completed":"2025-08-23","notes":"Adopt FOM = yield per input energy; report Γ when dense pair plasma achieved.","math_snippet":"\\mathrm{FOM} = \\frac{Y}{E_\\mathrm{in} \\cdot C};\\quad C=10^8","python_snippet":"from reactor.metrics import total_fom, antiproton_yield_estimator as Y\ny = Y(1e20, 10.0, {\"model\":\"physics\"}); f = total_fom(y, 1e12); print(f)","refs":["scripts/production_kpi.py","scripts/plot_production_fom.py","tests/test_metrics.py"]}
{"event":"tailor_antiproton_overview","date":"2025-08-22","topic":"Antiproton production overviews","audience":"arXiv:2402.09920","status":"completed","date_completed":"2025-08-23","notes":"Report energy per antiproton via inverse FOM scaling; align with ≤1e11–1e12 J constraints.","python_snippet":"from reactor.metrics import total_fom, antiproton_yield_estimator as Y\ny = Y(1e20, 10.0, {\"model\":\"physics\"}); f = total_fom(y, 1e11)\nE_per_particle = 1.0/max(1e-30,f)\nprint(E_per_particle)","refs":["scripts/production_kpi.py","scripts/run_report.py","tests/test_followups.py"]}
{"event":"infra_summary","notes":"CI perf budget gating, release workflow, PR summary, dashboard filters & JSON export, cost/SNR analyses, Nox targets, hardware dry-run, and anomalies schema added.","status":"done","date":"2025-08-16"}
{"event":"docs_summary","notes":"Added synthetic anomalies generator, improved dashboard with navbar and anchors, exposed new CLIs, and added resilience tests.","status":"done","date":"2025-08-16"}
{"date":"2025-08-22","topic":"Bennett-profile Z-pinch focus","audience":"arXiv:2506.05727","status":"completed","date_completed":"2025-08-23","notes":"Emphasize confinement ≥94% and Γ>140 for ≥10 ms; include sweep and duration checks.","math_snippet":"\\Gamma(t) = \\frac{|\\nabla p \\times \\nabla \\rho|}{\\max(\\rho^2, \\epsilon)};\\quad \\text{pass if } \\Gamma \\ge 140 \text{ for } \Delta t=10 \text{ms}","python_snippet":"from reactor.metrics import stability_duration\nimport numpy as np\ngamma = np.ones(10000)*150.0 + np.random.normal(0,0.01,10000)\nassert stability_duration(gamma, dt=1e-6, threshold=140.0, min_duration=1e-2)","refs":["scripts/param_sweep_confinement.py","scripts/plot_stability.py","tests/test_followups.py"]}
{"date":"2025-08-22","topic":"Transport/magnetization trap papers","audience":"arXiv:1703.10727","status":"completed","date_completed":"2025-08-23","notes":"Report Γ and particle-retention (%) over 10 ms window; map to stability_probability.","python_snippet":"from reactor.analysis_stat import stability_probability\nprob = stability_probability(np.ones(10000)*150.0, threshold=140.0, steps=10000)\nprint(prob)","refs":["scripts/time_to_stability_yield.py","scripts/plot_stability.py","tests/test_followups.py"]}
{"date":"2025-08-22","topic":"Pair/positron beam/shower papers","audience":"arXiv:2207.09093","status":"completed","date_completed":"2025-08-23","notes":"Adopt FOM = yield per input energy; report Γ when dense pair plasma achieved.","math_snippet":"\\mathrm{FOM} = \\frac{Y}{E_\\mathrm{in} \\cdot C};\\quad C=10^8","python_snippet":"from reactor.metrics import total_fom, antiproton_yield_estimator as Y\ny = Y(1e20, 10.0, {\"model\":\"physics\"}); f = total_fom(y, 1e12); print(f)","refs":["scripts/production_kpi.py","scripts/plot_production_fom.py","tests/test_metrics.py"]}
{"date":"2025-08-22","topic":"Antiproton production overviews","audience":"arXiv:2402.09920","status":"completed","date_completed":"2025-08-23","notes":"Report energy per antiproton via inverse FOM scaling; align with ≤1e11–1e12 J constraints.","python_snippet":"from reactor.metrics import total_fom, antiproton_yield_estimator as Y\ny = Y(1e20, 10.0, {\"model\":\"physics\"}); f = total_fom(y, 1e11)\nE_per_particle = 1.0/max(1e-30,f)\nprint(E_per_particle)","refs":["scripts/production_kpi.py","scripts/run_report.py","tests/test_followups.py"]}
{"summary":"CI perf budget gating, release workflow, PR summary, dashboard filters & JSON export, cost/SNR analyses, Nox targets, hardware dry-run, and anomalies schema added.","status":"done","date":"2025-08-16"}
{"summary":"Added synthetic anomalies generator, improved dashboard with navbar and anchors, exposed new CLIs, and added resilience tests.","status":"done","date":"2025-08-16"}
{"event":"EnergyLedger enhancement factor integrated and syntax errors fixed","status":"completed","refs":["src/reactor/energy.py"],"details":{"apply_enhancement":true,"total_energy_reduction":true}}
{"event":"metrics_gate supports optional antiproton yield gate","status":"completed","refs":["scripts/metrics_gate.py"],"details":{"flag":"--require-yield"}}
{"event":"Phase 3: Added dynamic stability vs ripple CLI & artifact","status":"completed","refs":["scripts/plot_dynamic_stability_ripple.py",".github/workflows/ci.yml"],"details":{"artifact":"dynamic_stability_ripple.png"}}
{"event":"Phase 3: High-load hardware metrics plot variant","status":"completed","refs":["scripts/plot_hardware_metrics.py",".github/workflows/ci.yml"],"details":{"artifact":"high_load_hardware_metrics.png"}}
{"event":"Phase 3: Time sweep and dynamic ripple sweep added","status":"completed","refs":["scripts/param_sweep_confinement.py"],"details":{"csv":["full_sweep_with_time.csv","full_sweep_with_dynamic_ripple.csv"]}}
{"event":"Phase 3: Dashboard generator added","status":"completed","refs":["scripts/generate_progress_dashboard.py",".github/workflows/ci.yml"],"details":{"artifact":"progress_dashboard.html"}}
{"event":"Phase 3: Test markers and CI split runs","status":"completed","refs":["pytest.ini",".github/workflows/ci.yml"]}
{"event":"Phase 3: KPI cost model wiring","status":"completed","refs":["scripts/production_kpi.py","configs/cost_model.json"]}
{"event":"Phase 3: Local JSON Schemas added","status":"completed","refs":["docs/schemas/integrated_report.schema.json","docs/schemas/production_kpi.schema.json"]}
{"event":"Phase 3: Sensor noise model utility","status":"completed","refs":["scripts/sensor_noise_model.py"]}
{"event":"Phase 3: Bench step loop micro-benchmark","status":"completed","refs":["scripts/bench_step_loop.py"]}
{"event":"Phase 3: Plot overlays enabled","status":"completed","refs":["scripts/plot_production_fom.py","scripts/plot_stability.py"]}
{"event":"Phase 3: Hardware runner CLI and test","status":"completed","refs":["scripts/hardware_runner.py","tests/test_followups.py"]}
{"event":"Phase 3: CI hardware job","status":"completed","refs":[".github/workflows/ci.yml"]}
{"event":"Phase 3: Dashboard artifact links","status":"completed","refs":["scripts/generate_progress_dashboard.py"]}
{"event":"Phase 3: README badges and CLI catalog","status":"completed","refs":["README.md"]}
{"event":"Phase 3: Time-to-metrics headless fallback","status":"completed","refs":["scripts/time_to_stability_yield.py"]}

{"event":"Docs: MkDocs usage added","status":"completed","refs":["docs/MKDOCS_USAGE.md","mkdocs.yml"],"date":"2025-08-17"}
{"event":"Paper: phase3_stability updated","status":"completed","refs":["papers/phase3_stability.tex"],"date":"2025-08-17"}
